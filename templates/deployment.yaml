apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: "{{ template "fullname" . }}"
    version: "{{ .Chart.AppVersion }}"
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
spec:  
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "fullname" . }} # has to match .spec.template.metadata.labels
  template:
    metadata:
      labels:
        app: {{ template "fullname" . }}
    spec:
      {{- if and .Values.nodeStickyMode.enabled .Values.nodeStickyMode.nodeAffinity }}
      affinity:
        nodeAffinity:
{{ .Values.nodeStickyMode.nodeAffinity | toYaml | indent 10 }}
      {{- end }}
      hostAliases:
      {{- if .Values.hostAliases }}
{{ .Values.hostAliases | toYaml | indent 6 }}
      {{- end }}
      containers:
      - name: {{ .Chart.Name }}
      {{- if .Values.mysql.enabled }}
        image: "{{ .Values.image.name }}:lts-mysql-tomcat"
      {{- else if .Values.postgresql.enabled }}
        image: "{{ .Values.image.name }}:lts-postgres-tomcat"
      {{- else }}
        image: {{ .Values.image.name }}:{{ .Values.image.tag }}
      {{- end }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - containerPort: {{ .Values.service.internalPort }}
        env:
        - name: JAVA_OPTS
          value: "-Xmx2048m"
        - name: DB_PASSWORD
          valueFrom:
      {{- if .Values.externalDB.password.valueFrom }}
{{ .Values.externalDB.password.valueFrom | toYaml | indent 12 }}
      {{- else }}
            secretKeyRef:
        {{- if .Values.mysql.enabled }}
              name: "{{ .Release.Name }}-mysql"
              key: mysql-password
        {{- else if .Values.postgresql.enabled }}
              name: "{{ .Release.Name }}-postgresql"
              key: postgresql-password
        {{- else }}
              name: {{ include "fullname" . | quote }}
              key: DB_PASSWORD
        {{- end }}
      {{- end }}
        {{- if .Values.solr.enabled }}
        - name: INDEX_HOST
          valueFrom:
            configMapKeyRef:
              name: {{ template "fullname" . }}
              key: INDEX_HOST
        - name: INDEX_PORT
          valueFrom:
            configMapKeyRef:
              name: {{ template "fullname" . }}
              key: INDEX_PORT
        {{- end }}
        - name: DB_HOST
          valueFrom:
          {{- if .Values.externalDB.host.valueFrom }}
{{ .Values.externalDB.host.valueFrom | toYaml | indent 12 }}
          {{- else }}
            configMapKeyRef:
              name: {{ template "fullname" . }}
              key: DB_HOST
          {{- end }}
        
        - name: DB_USER
          valueFrom:
          {{- if .Values.externalDB.user.valueFrom }}
{{ .Values.externalDB.user.valueFrom | toYaml | indent 12 }}
          {{- else }}
            configMapKeyRef:
              name: {{ template "fullname" . }}
              key: DB_USER
          {{- end }}

        - name: DB_DATABASE
          valueFrom:
          {{- if .Values.externalDB.database.valueFrom }}
{{ .Values.externalDB.database.valueFrom | toYaml | indent 12 }}
          {{- else }}
            configMapKeyRef:
              name: {{ template "fullname" . }}
              key: DB_DATABASE
          {{- end }}
        resources:
{{ toYaml .Values.resources | indent 12 }}
        volumeMounts:
        - name: xwiki-data
          mountPath: /usr/local/xwiki/data
        {{- with .Values.tomcat }}
          {{- if .customServerConfig }}
        - name: tomcat-config
          mountPath: /usr/local/tomcat/conf/server.xml
          subPath: server.xml
          {{- end }}
        {{- end }}
      volumes:
      - name: xwiki-data
        {{- if .Values.persistentStorage.enabled }}
        persistentVolumeClaim:
          claimName: {{ template "fullname" . }}
        {{- else if and .Values.nodeStickyMode.enabled .Values.nodeStickyMode.dataHostPath }}
        hostPath:
          path: {{ .Values.nodeStickyMode.dataHostPath }}
          type: DirectoryOrCreate
        {{- else }}
        emptyDir: {}
        {{- end }}
      {{- with .Values.tomcat }}
        {{- if .customServerConfig }}
      - name: tomcat-config
        configMap:
          name: {{ template "fullname" $ }}
        {{- end }}
      {{- end }}
---

{{- if .Values.persistentStorage.enabled }}
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ template "fullname" . }}
  namespace: {{ .Release.Namespace }}
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: {{ .Values.persistentStorage.storage }}
    {{- if .Values.persistentStorage.storageClass }}
    storageClassName: {{ .Values.persistentStorage.storageClass | quote }}
    {{- end }}
{{- end }}