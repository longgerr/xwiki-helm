suite: test deployment
templates:
  - deployment.yaml
tests:
  - it: should use custom image
    set:
      image.tag: latest
      mysql.enabled: false
      postgresql.enabled: false
      image.name: default
    asserts:
      - isKind:
          of: Deployment
      - equal:
          path: spec.template.spec.containers[0].image
          value: default:latest
      - matchSnapshot:
          path: spec.template.spec.containers[0].env
      - matchRegex:
          path: metadata.labels.app
          pattern: default-*
      - matchRegex:
          path: metadata.labels.app
          pattern: -latest          
  - it: should use mysql lts image
    set:
      image.tag: latest
      mysql.enabled: true
      postgresql.enabled: false
    asserts:
      - isKind:
          of: Deployment
      - equal:
          path: spec.template.spec.containers[0].image
          value: xwiki:lts-mysql-tomcat
      - matchSnapshot:
          path: spec.template.spec.containers[0].env
      - matchRegex:
          path: metadata.labels.app
          pattern: xwiki-*
      - matchRegex:
          path: metadata.labels.app
          pattern: -lts-mysql-tomcat
  - it: should use postgres lts image
    set:
      image.tag: latest
      mysql.enabled: false
      postgresql.enabled: true
    asserts:
      - isKind:
          of: Deployment
      - equal:
          path: spec.template.spec.containers[0].image
          value: xwiki:lts-postgres-tomcat
      - matchSnapshot:
          path: spec.template.spec.containers[0].env
      - matchRegex:
          path: metadata.labels.app
          pattern: xwiki-*
      - matchRegex:
          path: metadata.labels.app
          pattern: -lts-postgres-tomcat 
  - it: should properly set value
    set:
      image.pullPolicy: IfNotPresent
      service.internalPort: 8080
      persistentStorage.enabled: true
    asserts:  
      - equal:
          path: metadata.name
          value: RELEASE-NAME-xwiki
      - equal:
          path: spec.template.spec.containers[0].imagePullPolicy
          value: IfNotPresent
      - equal:
          path: spec.template.spec.containers[0].ports[0].containerPort
          value: 8080
      - equal:
          path: spec.template.spec.containers[0].volumeMounts[0].name
          value: xwiki-data
      - equal:
          path: spec.template.spec.volumes[0].name
          value: xwiki-data
      - equal:
          path: spec.template.spec.volumes[0].persistentVolumeClaim.claimName
          value: RELEASE-NAME-xwiki
      - matchSnapshot:
          path: spec.template.spec.containers[0].volumeMounts
      - matchSnapshot:
          path: spec.template.spec.volumes 
  - it: should properly set value pvc
    set:
      persistentStorage.enabled: true
    asserts:
      - isKind:
          of: PersistentVolumeClaim
        documentIndex: 1
      - matchSnapshot:
          path: spec
        documentIndex: 1
      - equal:
          path: metadata.name
          value: RELEASE-NAME-xwiki
        documentIndex: 1
  - it: should use empty local storage
    set:
      persistentStorage.enabled: false
    asserts:
      - isKind:
          of: Deployment
      - equal:
          path: spec.template.spec.containers[0].volumeMounts[0].name
          value: xwiki-data
      - equal:
          path: spec.template.spec.volumes[0].name
          value: xwiki-data
      - isEmpty:
          path: spec.template.spec.volumes[0].emptyDir
  - it: should run in node sticky mode and use hostPath storage
    set:
      persistentStorage.enabled: false
      nodeStickyMode:
        enabled: true
        dataHostPath: /app/xwiki/data
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: xwiki
                operator: In
                values:
                - "true"
    asserts:
      - isKind:
          of: Deployment
      - equal:
          path: spec.template.spec.volumes[0].hostPath.path
          value: /app/xwiki/data
      - equal:
          path: spec.template.spec.volumes[0].hostPath.type
          value: DirectoryOrCreate
      - matchSnapshot:
          path: spec.template.spec.affinity
  - it: should not run in node sticky mode even nodeAffinity is set
    set:
      persistentStorage.enabled: true
      nodeStickyMode:
        enabled: false
        dataHostPath: /app/xwiki/data
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: xwiki
                operator: In
                values:
                - "true"
    asserts:
      - isKind:
          of: Deployment
      - equal:
          path: spec.template.spec.containers[0].volumeMounts[0].name
          value: xwiki-data
      - equal:
          path: spec.template.spec.volumes[0].name
          value: xwiki-data
      - equal:
          path: spec.template.spec.volumes[0].persistentVolumeClaim.claimName
          value: RELEASE-NAME-xwiki
      - isEmpty:
          path: spec.template.spec.affinity
  - it: should set environment variables from external DB configMap and secret
    set:
      mysql.enabled: false
      postgresql.enabled: false
      externalDB:
        password:
          value: ''
          valueFrom:
            secretKeyRef:
              name: xwiki-db-secret
              key: DB_PASSWORD_FROM_SECRET
        user:
          value: ''
          valueFrom:
            configMapKeyRef:
              name: xwiki-db-config-map
              key: DB_USER_FROM_CONFIGMAP
        database:
          value: ''
          valueFrom:
            configMapKeyRef:
              name: xwiki-db-config-map
              key: DB_NAME_FROM_CONFIGMAP
        host:
          value: ''
          valueFrom:
            configMapKeyRef:
              name: xwiki-db-config-map
              key: DB_HOST_FROM_CONFIGMAP
    asserts:
    - matchSnapshot:
          path: spec.template.spec.containers[0].env
          